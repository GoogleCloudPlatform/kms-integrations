load("@rules_cc//cc:defs.bzl", "cc_library", "cc_test")

package(
    default_testonly = 1,
    default_visibility = ["//:internal"],
)

cc_library(
    name = "matchers",
    hdrs = ["matchers.h"],
    deps = [
        "//common:status_utils",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings:str_format",
    ],
)

cc_test(
    name = "matchers_test",
    size = "small",
    srcs = ["matchers_test.cc"],
    deps = [
        ":matchers",
        "//common:test_message_cc_proto",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "proto_parser",
    testonly = 1,
    hdrs = ["proto_parser.h"],
    deps = [
        "@com_google_googletest//:gtest",
        "@com_google_protobuf//:protobuf_lite",
    ],
)

cc_test(
    name = "proto_parser_test",
    size = "small",
    srcs = ["proto_parser_test.cc"],
    deps = [
        ":matchers",
        ":proto_parser",
        "//common:test_message_cc_proto",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "resource_helpers",
    testonly = 1,
    srcs = ["resource_helpers.cc"],
    hdrs = ["resource_helpers.h"],
    deps = [
        "//common:kms_v1",
        "//common:openssl",
        "//common/test:test_status_macros",
        "//fakekms/cpp:fakekms",
        "//kmsp11/util:crypto_utils",
        "@com_google_absl//absl/strings",
    ],
)

filegroup(
    name = "testdata",
    srcs = glob(["testdata/*"]),
)

cc_library(
    name = "runfiles",
    srcs = ["runfiles.cc"],
    hdrs = ["runfiles.h"],
    data = [":testdata"],
    deps = [
        "@bazel_tools//tools/cpp/runfiles",
        "@com_google_absl//absl/log:absl_check",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_googletest//:gtest",
    ],
)

cc_library(
    name = "test_platform",
    testonly = 1,
    srcs = select({
        "//:windows": ["test_platform_win.cc"],
        "//conditions:default": ["test_platform_posix.cc"],
    }),
    hdrs = ["test_platform.h"],
    linkopts = select({
        "//:linux": ["-ldl"],
        "//conditions:default": [],
    }),
    deps = [
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
        "@com_google_absl//absl/strings:str_format",
    ],
)

cc_library(
    name = "test_status_macros",
    hdrs = ["test_status_macros.h"],
    deps = [
        ":matchers",
        "//common:status_macros",
        "//common:status_utils",
        "@com_google_absl//absl/log:absl_check",
        "@com_google_absl//absl/status:statusor",
        "@com_google_googletest//:gtest",
    ],
)

cc_test(
    name = "test_status_macros_test",
    size = "small",
    srcs = ["test_status_macros_test.cc"],
    deps = [
        ":test_status_macros",
        "@com_google_googletest//:gtest_main",
    ],
)
