load("@bazel_skylib//lib:selects.bzl", "selects")
load("@rules_cc//cc:defs.bzl", "cc_binary", "cc_library", "cc_test")

package(default_visibility = [
    "//common:__subpackages__",
    "//kmscng:__subpackages__",
])

cc_library(
    name = "bridge",
    srcs = [
        "bridge.cc",
        "unsupported.cc",
    ],
    hdrs = ["bridge.h"],
    linkstatic = True,
    target_compatible_with = ["@platforms//os:windows"],
    deps = [
        "//common:status_macros",
        "//kmscng:cng_headers",
        "//kmscng:provider",
        "//kmscng/util:errors",
        "//kmscng/util:status_utils",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings",
    ],
    alwayslink = True,
)

cc_test(
    name = "bridge_test",
    size = "small",
    srcs = ["bridge_test.cc"],
    linkopts = ["-DEFAULTLIB:ncrypt.lib"],
    target_compatible_with = ["@platforms//os:windows"],
    deps = [
        ":bridge",
        "//common/test:test_status_macros",
        "//kmscng:cng_headers",
        "//kmscng/test:matchers",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_binary(
    name = "kmscng.dll",
    linkshared = True,
    target_compatible_with = ["@platforms//os:windows"],
    win_def_file = "kmscng.def",
    deps = [":main"],
)

cc_library(
    name = "main",
    srcs = ["main.cc"],
    target_compatible_with = ["@platforms//os:windows"],
    deps = [
        ":bridge",
        "//kmscng:cng_headers",
        "//kmscng/util:status_utils",
        "@com_google_absl//absl/status",
    ],
)
