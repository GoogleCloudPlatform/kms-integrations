load("@rules_cc//cc:defs.bzl", "cc_library", "cc_proto_library", "cc_test")
load("@rules_proto//proto:defs.bzl", "proto_library")

package(
    default_testonly = 1,
    default_visibility = [
        "//common:__subpackages__",
        "//kmscng:__subpackages__",
    ],
)

cc_library(
    name = "matchers",
    hdrs = ["matchers.h"],
    target_compatible_with = ["@platforms//os:windows"],
    deps = [
        "//common/test:matchers",
        "//kmscng/util:status_utils",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/status:statusor",
        "@com_google_absl//absl/strings:str_format",
    ],
)

cc_test(
    name = "matchers_test",
    size = "small",
    srcs = ["matchers_test.cc"],
    target_compatible_with = ["@platforms//os:windows"],
    deps = [
        ":matchers",
        "@com_google_absl//absl/status",
        "@com_google_googletest//:gtest_main",
    ],
)

cc_library(
    name = "register_provider",
    srcs = ["register_provider.cc"],
    hdrs = ["register_provider.h"],
    target_compatible_with = ["@platforms//os:windows"],
    deps = [
        "//kmscng:cng_headers",
        "@com_google_absl//absl/status",
        "@com_google_absl//absl/strings:str_format",
        "@cpdk//:bcrypt_provider",
    ],
)

cc_test(
    name = "registered_provider_test",
    size = "small",
    srcs = ["registered_provider_test.cc"],
    linkopts = ["-DEFAULTLIB:ncrypt.lib"],
    target_compatible_with = ["@platforms//os:windows"],
    deps = [
        ":register_provider",
        "//common/test:test_status_macros",
        "//kmscng:cng_headers",
        "@com_google_absl//absl/strings:str_format",
        "@com_google_googletest//:gtest_main",
    ],
)
